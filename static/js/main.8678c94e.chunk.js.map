{"version":3,"sources":["MovementNode.jsx","NewSession.jsx","App.jsx","index.jsx"],"names":["MovementNode","useStyles","makeStyles","theme","useTheme","headerRoot","backgroundColor","palette","primary","main","headerTitle","color","common","white","session","Session","NewSession","setContext","classes","enqueueSnackbar","useSnackbar","useState","webSocketUrl","setWebSocketUrl","connecting","setConnecting","onConnect","newContext","variant","onDisconnect","code","reason","onError","err","message","validateWebSocketUrl","startsWith","length","Container","maxWidth","Card","CardHeader","title","root","CardContent","TextField","label","value","onChange","event","target","error","helperText","disabled","fullWidth","CardActions","Button","onClick","setTimeout","connect","CircularProgress","size","App","context","maxSnack","Fade","in","render","StrictMode","document","getElementById"],"mappings":"oLAMeA,MAJf,WACE,OAAO,yB,iGCeHC,EAAYC,aAAW,WAC3B,IAAMC,EAAQC,cAEd,MAAO,CACLC,WAAY,CACVC,gBAAiBH,EAAMI,QAAQC,QAAQC,MAEzCC,YAAa,CACXC,MAAOR,EAAMI,QAAQK,OAAOC,WAK5BC,EAAU,IAAIC,UA2FLC,MAzFf,YAAqC,IAAfC,EAAc,EAAdA,WACdC,EAAUjB,IACRkB,EAAoBC,cAApBD,gBAF0B,EAIME,mBAAS,uBAJf,mBAI3BC,EAJ2B,KAIbC,EAJa,OAKEF,oBAAS,GALX,mBAK3BG,EAL2B,KAKfC,EALe,KAOlCX,EACGY,WAAU,SAACC,GACVR,EAAgB,kCAAmC,CACjDS,QAAS,YAGXX,EAAWU,GACXF,GAAc,MAEfI,cAAa,SAACC,EAAMC,GACnBZ,EAAgB,wCAAD,OAC2BY,EAD3B,aACsCD,EADtC,KAEb,CAAEF,QAAS,UAGbX,EAAW,MACXQ,GAAc,MAEfO,SAAQ,SAACC,GACRd,EAAgB,gBAAD,OAAiBc,EAAIC,SAAW,CAC7CN,QAAS,aAIf,IAQMO,EAAuB,WAC3B,OAAOb,EAAac,WAAW,UAAYd,EAAae,OAAS,GAOnE,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAM,cACNxB,QAAS,CACPyB,KAAMzB,EAAQb,WACdqC,MAAOxB,EAAQR,eAGnB,cAACkC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,gBACNC,MAAOzB,EACP0B,SAlBmB,SAACC,GAC5B1B,EAAgB0B,EAAMC,OAAOH,QAkBrBI,OAAQhB,IACRiB,WAAYjB,IAAyB,GAAK,wBAC1CkB,SAAU7B,EACVI,QAAQ,WACR0B,WAAS,MAGb,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAxCc,WACtBC,YAAW,WACT5C,EAAQ6C,QAAQrC,KACf,KAEHG,GAAc,IAoCN4B,UAAWlB,KAA0BX,EACrCb,MAAM,UACNiB,QAAQ,YACR0B,WAAS,EALX,SAOG9B,EAAa,cAACoC,EAAA,EAAD,CAAkBC,KAAM,KAAS,oBCpF5CC,MAnBf,WAAgB,IAAD,EACiBzC,mBAAS,MAD1B,mBACN0C,EADM,KACG9C,EADH,KAGb,OACE,eAAC,IAAD,CAAkB+C,SAAU,EAA5B,UACE,cAACC,EAAA,EAAD,CAAMC,GAAIH,EAAV,SACE,8BACE,cAAC,EAAD,QAGJ,cAACE,EAAA,EAAD,CAAMC,IAAKH,EAAX,SACE,8BACE,cAAC,EAAD,CAAY9C,WAAYA,YCdlCkD,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8678c94e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction MovementNode() {\n  return <div />;\n}\n\nexport default MovementNode;\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Container,\n  makeStyles,\n  useTheme,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { Session } from \"kumo-client\";\nimport { useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles(() => {\n  const theme = useTheme();\n\n  return {\n    headerRoot: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    headerTitle: {\n      color: theme.palette.common.white,\n    },\n  };\n});\n\nconst session = new Session();\n\nfunction NewSession({ setContext }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [webSocketUrl, setWebSocketUrl] = useState(\"ws://localhost:8080\");\n  const [connecting, setConnecting] = useState(false);\n\n  session\n    .onConnect((newContext) => {\n      enqueueSnackbar(\"Connected to the bridge server!\", {\n        variant: \"success\",\n      });\n\n      setContext(newContext);\n      setConnecting(false);\n    })\n    .onDisconnect((code, reason) => {\n      enqueueSnackbar(\n        `Disconnected from the bridge server! ${reason} (${code})`,\n        { variant: \"error\" }\n      );\n\n      setContext(null);\n      setConnecting(false);\n    })\n    .onError((err) => {\n      enqueueSnackbar(`Found error! ${err.message}`, {\n        variant: \"error\",\n      });\n    });\n\n  const onConnectButton = () => {\n    setTimeout(() => {\n      session.connect(webSocketUrl);\n    }, 1000);\n\n    setConnecting(true);\n  };\n\n  const validateWebSocketUrl = () => {\n    return webSocketUrl.startsWith(\"ws://\") && webSocketUrl.length > 5;\n  };\n\n  const onWebSocketUrlChange = (event) => {\n    setWebSocketUrl(event.target.value);\n  };\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card>\n        <CardHeader\n          title=\"New Session\"\n          classes={{\n            root: classes.headerRoot,\n            title: classes.headerTitle,\n          }}\n        />\n        <CardContent>\n          <TextField\n            label=\"WebSocket URL\"\n            value={webSocketUrl}\n            onChange={onWebSocketUrlChange}\n            error={!validateWebSocketUrl()}\n            helperText={validateWebSocketUrl() ? \"\" : \"Invalid WebSocket URL\"}\n            disabled={connecting}\n            variant=\"outlined\"\n            fullWidth\n          />\n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={onConnectButton}\n            disabled={!validateWebSocketUrl() || connecting}\n            color=\"primary\"\n            variant=\"contained\"\n            fullWidth\n          >\n            {connecting ? <CircularProgress size={24} /> : \"Connect\"}\n          </Button>\n        </CardActions>\n      </Card>\n    </Container>\n  );\n}\n\nNewSession.propTypes = {\n  setContext: PropTypes.func.isRequired,\n};\n\nexport default NewSession;\n","import { Fade } from \"@material-ui/core\";\nimport { SnackbarProvider } from \"notistack\";\nimport React, { useState } from \"react\";\n\nimport MovementNode from \"./MovementNode\";\nimport NewSession from \"./NewSession\";\n\nfunction App() {\n  const [context, setContext] = useState(null);\n\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <Fade in={context}>\n        <div>\n          <MovementNode />\n        </div>\n      </Fade>\n      <Fade in={!context}>\n        <div>\n          <NewSession setContext={setContext} />\n        </div>\n      </Fade>\n    </SnackbarProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}